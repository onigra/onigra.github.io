<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on onigra.github.io</title><link>https://onigra.github.io/post/</link><description>Recent content in Posts on onigra.github.io</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy; 2017 | &lt;a href="https://twitter.com/onigra_" target="_blank">Onigra&lt;/a> | Powerd by &lt;a href="https://github.com/mgjohansen/hucore" target="_blank">Hucore theme&lt;/a> &amp; &lt;a href="http://gohugo.io" target="_blank">Hugo&lt;/a></copyright><lastBuildDate>Tue, 05 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://onigra.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>RDS Blue Green Deployを使う時に気を付けるポイント</title><link>https://onigra.github.io/blog/2025/08/05/rds-blue-green-deploy-memo/</link><pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2025/08/05/rds-blue-green-deploy-memo/</guid><description>全体通して 接続断は発生するし、デプロイの設定から直接ロールバックができるわけではないので、ちゃんと理解して使わないといけないポイントが結構あ</description></item><item><title>Macで適当な画像ファイルをファイルサイズ指定して作成する</title><link>https://onigra.github.io/blog/2025/05/27/create-some-image-files-on-mac/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2025/05/27/create-some-image-files-on-mac/</guid><description># 300MBのランダムデータファイルを作成 dd if=/dev/urandom of=test_image.jpg bs=1m count=300 ## または、ゼロで埋めたファイル dd if=/dev/zero of=test_image.jpg bs=1m count=300 解説 dd（Data Duplicator）コマンド</description></item><item><title>THE MODELを読んだ</title><link>https://onigra.github.io/blog/2025/05/06/the-model-kansou/</link><pubDate>Tue, 06 May 2025 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2025/05/06/the-model-kansou/</guid><description>営業のプロセスに最近関心が強いので、最近のスタンダードになっていそうな THE MODEL を読んだ。 前半に著者がTHE GOALに影響を受けたという話が出てき</description></item><item><title>複雑なものを複雑なまま扱い、解法はシンプル（単純）にする</title><link>https://onigra.github.io/blog/2025/03/05/complex-and-simple/</link><pubDate>Wed, 05 Mar 2025 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2025/03/05/complex-and-simple/</guid><description>シンプル（単純）であることはいいことと言われがちだが、扱う問いを単純化しすぎるのも注意が必要で、個別最適に陥ったり、目先の利益を追求したり、</description></item><item><title>2024年買ってよかったもの10選</title><link>https://onigra.github.io/blog/2024/12/31/bestbuy-2024/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2024/12/31/bestbuy-2024/</guid><description>VETEMENTS 18SS ALPHA フード付MA-1 BLACKxWHITE デムナ期 LOOK44 黒のオーバーサイズのボンバージャケットが欲しくて買った 韓国のBOONTHESHOPで23AWのモデルを見て</description></item><item><title>Shinjuku.rb #94でカンファレンスプロポーザルの書き方勉強会をやって3人プロポーザルを出して3人採択された</title><link>https://onigra.github.io/blog/2024/09/11/shinjukurb-95/</link><pubDate>Wed, 11 Sep 2024 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2024/09/11/shinjukurb-95/</guid><description>Shinjuku.rb #94 カンファレンスプロポーザルの書き方勉強会 https://shinjukurb.connpass.com/event/324989/ タイトルの通りのことをやって、meetup中に Kaigi on Rails 2024 に出すプロポーザルをフィードバックしなが</description></item><item><title>Developers Summit 2024 Summerで登壇してきた</title><link>https://onigra.github.io/blog/2024/07/25/devsumi-2024-summer/</link><pubDate>Thu, 25 Jul 2024 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2024/07/25/devsumi-2024-summer/</guid><description>https://event.shoeisha.jp/devsumi/20240723 で、「オーナーシップは誰のものか」というタイトルで登壇&amp;amp;参加してきた。 聞きにきてくださった方々、登壇後に感想や質問を伝えてくださっ</description></item><item><title>Q: 御社はスクラム開発、アジャイル開発を導入してますか？</title><link>https://onigra.github.io/blog/2024/02/28/scrum-agile-yattemasuka/</link><pubDate>Wed, 28 Feb 2024 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2024/02/28/scrum-agile-yattemasuka/</guid><description>A 自己組織的であること、顧客の課題にフォーカスすること、変化に適応することに価値をおける組織でありたいため、アジャイルソフトウェア開発を学ぶ</description></item><item><title>昇進するとありがちなこと: 自分がやってた仕事をする人がいなくなる</title><link>https://onigra.github.io/blog/2024/02/22/what-happens-when-you-get-promoted/</link><pubDate>Thu, 22 Feb 2024 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2024/02/22/what-happens-when-you-get-promoted/</guid><description>概要 昇進するとありがちなこととして、これまで自分がやってた仕事をする人がいなくなるので、突然現場が回らなくなるということがある。 文章にすると</description></item><item><title>2023年買ってよかったもの10選</title><link>https://onigra.github.io/blog/2023/12/24/bestbuy-2023/</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2023/12/24/bestbuy-2023/</guid><description>JIL SANDER 22AW BLOUSON 02 PD 中綿ボンバージャケット MARINA YEE M.Y. SWEET Ⅰ LARGE SWEATSHIRT(turned sleeves) スウェット GAKKIN BLACK BUTTERFLIES HANABATSU FREECE JACKET フリースジャケット DRIES VAN NOTEN 23SS PINE 6433 ブラックデニム DRIES VAN NOTEN HABSA 1600 Tシャツ ブラッ</description></item><item><title>LaravelでPOPO(Plain Old Php Object)を追加する</title><link>https://onigra.github.io/blog/2023/12/06/laravel-popo/</link><pubDate>Wed, 06 Dec 2023 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2023/12/06/laravel-popo/</guid><description>背景 フレームワーク触ってて、例えばRailsだとActiveRecord継承してない普通のRubyのオブジェクト追加したくなることがある。同</description></item><item><title>自慢話</title><link>https://onigra.github.io/blog/2023/03/16/jiman/</link><pubDate>Thu, 16 Mar 2023 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2023/03/16/jiman/</guid><description>自分の職業をSoftware DeveloperでDevOpsですと言ったりするんですが、DevOpsと名乗ることに割とこだわりがあります。 2</description></item><item><title>2022年買ってよかったもの10選</title><link>https://onigra.github.io/blog/2022/12/31/bestbuy-2022/</link><pubDate>Sat, 31 Dec 2022 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2022/12/31/bestbuy-2022/</guid><description>服 THE RERACS シルク混タートルネックニット これ定番化してほしかった MARNI カシミア100% ロングコート 2年ぐらい前に表参道のMARNIで試着して、「めちゃ</description></item><item><title>プロジェクト及びチームに秩序をもたらすために初手やっていること</title><link>https://onigra.github.io/blog/2022/12/04/wip-limits/</link><pubDate>Sun, 04 Dec 2022 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2022/12/04/wip-limits/</guid><description>ではなく、 仕掛かり制限 です。 https://chat.openai.com はじめに 秩序が無いプロジェクト及びチームは、以下のような状態に陥ってることが（経験上）多いです。 生産能力に対し</description></item><item><title>何を知ってるとアジャイルにおける「スコープの調整」ができるようになるのか？</title><link>https://onigra.github.io/blog/2022/07/28/how-to-scope-control/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2022/07/28/how-to-scope-control/</guid><description>https://twitter.com/onigra_/status/1552299260460564480 他になんかでてきたら更新する スコープの調整ができる 顧客に最もインパクトとアウトカムを生み出すのが何かを知っている 生み出すための手段を知って</description></item><item><title>2021年買ってよかったもの10選</title><link>https://onigra.github.io/blog/2021/12/30/bestbuy-2021/</link><pubDate>Thu, 30 Dec 2021 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2021/12/30/bestbuy-2021/</guid><description>アパレル Jan Jan Van Essche 2020AW PROJECTS 8 &amp;ldquo;REMEMBRANCE&amp;rdquo; TROUSER#58(BLACK) 去年HED MAYNERのコートを買った時、本当はこのパンツを買いに来たんだけど、コートを買ってしまった んだけど、結</description></item><item><title>書籍「組織デザイン」読書メモ</title><link>https://onigra.github.io/blog/2021/05/17/soshiki-design-dokusho-memo/</link><pubDate>Mon, 17 May 2021 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2021/05/17/soshiki-design-dokusho-memo/</guid><description>タイムラインで見かけて読んでみたら、思った以上にいい本だった https://www.amazon.co.jp/dp/4532110238 序章 組織デザインとは何か 組織的とは 役割を明確に分化させてそれぞれの専門性を活用</description></item><item><title>自分は自分を基準とした性善説的な判断をしがちだなと思った</title><link>https://onigra.github.io/blog/2021/03/17/seikaku/</link><pubDate>Wed, 17 Mar 2021 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2021/03/17/seikaku/</guid><description>「普通（自分が）こんなことするわけないから、他の人もするわけないだろ」と思いがちで、性悪説的な物事の運用や制度を考えるのに向いてなさそうだな</description></item><item><title>2011年3月11日と以降数日の記憶のメモ</title><link>https://onigra.github.io/blog/2021/03/11/2011-03-11/</link><pubDate>Thu, 11 Mar 2021 10:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2021/03/11/2011-03-11/</guid><description>当時、自分はECサイトを運営している弱小ベンチャーでプログラマの見習い社員みたいなことをやっていて、超イレギュラーオペレーションを色々経験し</description></item><item><title>ワンライナーでお手軽にhttpサーバを立てるcliを作った</title><link>https://onigra.github.io/blog/2021/01/02/one-liner-http-server-cli-wasataro/</link><pubDate>Sat, 02 Jan 2021 15:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2021/01/02/one-liner-http-server-cli-wasataro/</guid><description>nginxのリバプロの設定をスモークテストしたい と思った時に、ワンコマンドでhttpサーバで起動できるお手軽なcliと、それが使えるコンテナ</description></item><item><title>nginxのリバプロの設定をスモークテストしたい</title><link>https://onigra.github.io/blog/2021/01/01/nginx-reverse-proxy-smoke-test/</link><pubDate>Fri, 01 Jan 2021 13:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2021/01/01/nginx-reverse-proxy-smoke-test/</guid><description>やりたいこと nginxのリバプロの設定をスモークテストしたい 方針 proxy先のhttpサーバをdocker-composeでまとめて立ち上げ</description></item><item><title>ブログのdeploy workflowをWerckerからGitHub Actionsに移行した</title><link>https://onigra.github.io/blog/2020/12/31/blog-migrate-deploy-workflow/</link><pubDate>Thu, 31 Dec 2020 14:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/12/31/blog-migrate-deploy-workflow/</guid><description>概要 このブログのデプロイは Hugoの公式に載ってることもあり Wercker でやってたんだけど、 GitHub PagesだしGitHub Actionsに移行した。 使っ</description></item><item><title>コンテナに対してルーティングするリバースプロキシを何でやるか</title><link>https://onigra.github.io/blog/2020/12/31/container-reverse-proxy-idea/</link><pubDate>Thu, 31 Dec 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/12/31/container-reverse-proxy-idea/</guid><description>お題 httpサーバを複数のコンテナで並べた時に、各コンテナに対してルーティングするリバースプロキシを何でやるか ドキュメントルートに対してのリ</description></item><item><title>2020年買ってよかったもの10選</title><link>https://onigra.github.io/blog/2020/12/29/bestbuy-2020/</link><pubDate>Tue, 29 Dec 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/12/29/bestbuy-2020/</guid><description>アパレル Maison Margiela 2019AW WOOL MELTON &amp;ldquo;RIP&amp;rdquo; SWING TOP JACKET Black Kei Shigenaga &amp;ldquo;TAMI&amp;rdquo; BANGLE THE RERACS 2019AW WIDE EASY SLACKS ウール&amp;amp;モヘア ハウンドトゥース ブラウン THE RERACS 2019AW シャツ ブラック LOEWE オーバーサイズウールニッ</description></item><item><title>2020年に初めて学ぶImmutable Infrastructure</title><link>https://onigra.github.io/blog/2020/12/06/immutable-infrastructure-for-bigginers/</link><pubDate>Sun, 06 Dec 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/12/06/immutable-infrastructure-for-bigginers/</guid><description>この記事はClassi Advent Calendar 2020 6 日目の記事です。 前回は、lacolacoさんによるNx monorepo での npm パッケージ管理と GitHub Actionsでした。 背景 仕事</description></item><item><title>解法がいくつかある先送りにしてる問題について、考えてることを共有するタイミングと粒度が難しい話</title><link>https://onigra.github.io/blog/2020/08/13/kyouyu-ryudo-timing-muzui/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/08/13/kyouyu-ryudo-timing-muzui/</guid><description>仕事してる中で、「ちょっと微妙だな」とか「後々こういう時に困るかも」とは思ってるけど、解法が3~4個あってメリットデメリット検証しなくちゃい</description></item><item><title>最低限の監視</title><link>https://onigra.github.io/blog/2020/07/13/minimum-monitoring/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/07/13/minimum-monitoring/</guid><description>何を監視したいか ロードバランサーのレスポンスタイム レスポンスタイムが悪化してないか ロードバランサーの5xxの数 短期間に増えてないか リクエスト</description></item><item><title>チャットで即答しづらい質問に回答するコツ</title><link>https://onigra.github.io/blog/2020/06/28/how-to-response-difficult-question-on-chat/</link><pubDate>Sun, 28 Jun 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/06/28/how-to-response-difficult-question-on-chat/</guid><description>はじめに: 個人の見解です チャットのオープンなチャンネルで即答しづらい質問（難しい、鋭い、自分の意見だけでは回答できない）ような質問に回答する</description></item><item><title>ECS Fargate Platform Version 1.4.0 は空文字列の環境変数を設定できない</title><link>https://onigra.github.io/blog/2020/06/15/ecs-fargate-purge-empty-string-env-var/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/06/15/ecs-fargate-purge-empty-string-env-var/</guid><description>Task Definition に空文字列を設定した環境変数があるアプリをPlatform Version 1.4.0 で起動したら、アプリ実行時に環境変数が存在しないエラーが発生した。 1.3.0 では普</description></item><item><title>rails_semantic_loggerでヘルスチェックのログを止める</title><link>https://onigra.github.io/blog/2020/05/06/disable-health-check-log-on-rails-semantic-logger/</link><pubDate>Wed, 06 May 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/05/06/disable-health-check-log-on-rails-semantic-logger/</guid><description>rails_semantic_logger は Rails::Rack::Logger を swap してる ので、以下のような swap がうまく動かない。 Rails::Rack::Logger を継承した middleware を swap する際は引数に log_tags を忘れずに 特定のログを抑制する方法として、Seman</description></item><item><title>RailsをECSで動かす時のログをどうするか考える</title><link>https://onigra.github.io/blog/2020/05/04/log-strategy-rails-on-ecs/</link><pubDate>Mon, 04 May 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/05/04/log-strategy-rails-on-ecs/</guid><description>実験リポジトリ https://github.com/onigra/rails_sandbox 制約 Fargate リバースプロキシは別の Service で動いている h2o, nginx など http server のログは考慮しない Application Server は Unicorn 方針 Rails, Unicorn のログは全部 STDOUT に出す STDOUT に両方のログが</description></item><item><title>fluent-bitをdockerのlog driverとして試す</title><link>https://onigra.github.io/blog/2020/05/02/try-fluent-bit-on-docker/</link><pubDate>Sat, 02 May 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/05/02/try-fluent-bit-on-docker/</guid><description>結論 # 他のコンテナからログを受けられる fluent-bit コンテナの起動 docker run -it -p 24224:24224 fluent/fluent-bit:latest /fluent-bit/bin/fluent-bit -i forward -o stdout # ログドライバを指定して標準出力を出せば、forwardされて fluent-bit</description></item><item><title>undefined method `DelegateClass' for Rack::Session::Cookie:Class</title><link>https://onigra.github.io/blog/2020/02/24/undefined-method-delegate-class-on-rack-session-cookie/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/02/24/undefined-method-delegate-class-on-rack-session-cookie/</guid><description>2020-02-25 09:25 JST 追記 マージされたのでそのうち解消されると思う。 原文 SidekiqのWeb ConsoleをDockerでスタンドアローンで運用してるんだ</description></item><item><title>2019年買ってよかったもの10選</title><link>https://onigra.github.io/blog/2020/01/05/bestbuy-2019/</link><pubDate>Sun, 05 Jan 2020 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2020/01/05/bestbuy-2019/</guid><description>Maison Margiela 2018SS 5zip ライダース スエード ブラック AMBUSH 2019AW FLIGHT CARGO PANTS OLIVE Neil Barret 2019AW ウール カーゴパンツ Acne Studios ウール ドローコードパンツ ネイビー THE RERACS 2019AW RERACS SUPER HIGH TENSION HALF CARDIGAN RIB MOCKNECK KNIT(BLACK) Native Sons SEEGER 47 Antique</description></item><item><title>中年が継続的に体調とメンタルを良好に保つノウハウ</title><link>https://onigra.github.io/blog/2019/12/05/midlife-health-care/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0900</pubDate><guid>https://onigra.github.io/blog/2019/12/05/midlife-health-care/</guid><description>この記事はClassi Advent Calendar 2019 5 日目の記事です。 前回は、yukoono さん による Classi の新卒エンジニア向け研修、「万葉研修」について でした。 さて、</description></item><item><title>Pythonあまり知らない人がMacでAnsibleリポジトリの最低限の開発環境をつくる</title><link>https://onigra.github.io/blog/2019/01/27/ansible-development-setup/</link><pubDate>Sun, 27 Jan 2019 20:17:41 +0900</pubDate><guid>https://onigra.github.io/blog/2019/01/27/ansible-development-setup/</guid><description>Ansibleにプルリク出すのに調べた。基本的にこれの通りにやればいい。 Ansible module development: getting started 環境構築 Common environment setup テストの実行 Sanity tests Sanity Tests 静的解析とかするやつ symlinks は</description></item><item><title>Vue Fes Japan 2018 Reject Conferenceで発表してきた #vuefes_reject</title><link>https://onigra.github.io/blog/2018/11/12/vue-fes-japan-2018-reject-conference/</link><pubDate>Mon, 12 Nov 2018 21:51:41 +0900</pubDate><guid>https://onigra.github.io/blog/2018/11/12/vue-fes-japan-2018-reject-conference/</guid><description>Vue Fes Japan 2018 Reject Conferenceにて、Keycloak と Nuxt.js で Keycloak を使う話をしてきました。 Organizer のkazuponさんをはじめ、Vue Fes Japan のスタッフのみ</description></item><item><title>Digdagで実行するRubyのTaskのテスト書きたい時に使うDigdagのMock</title><link>https://onigra.github.io/blog/2018/10/27/digdag-mock/</link><pubDate>Sat, 27 Oct 2018 10:43:41 +0900</pubDate><guid>https://onigra.github.io/blog/2018/10/27/digdag-mock/</guid><description>class Digdag STORE_PARAMS = {} def self.env self end def self.store(params) STORE_PARAMS.merge!(params.transform_keys(&amp;amp;:to_s)) end def self.params STORE_PARAMS end end Digdag.env.store(foo: &amp;#39;bar&amp;#39;) #=&amp;gt; {&amp;#34;foo&amp;#34;=&amp;gt;&amp;#34;bar&amp;#34;} Digdag.env.params[&amp;#39;foo&amp;#39;] #=&amp;gt; &amp;#34;bar&amp;#34;</description></item><item><title>AMIからアプリケーションの環境ごとの固有の設定をなくし、サーバ起動時に動的に取得することにより、StagingとProductionで同じAMIを使う</title><link>https://onigra.github.io/blog/2018/08/18/remove-environment-settings-from-ami/</link><pubDate>Sat, 18 Aug 2018 18:03:41 +0900</pubDate><guid>https://onigra.github.io/blog/2018/08/18/remove-environment-settings-from-ami/</guid><description>はじめに ゴールデンイメージを作成し、それをLaunch TemplateやAuto Scaling Groupで使う運用は多いが、アプリケーションの作りによっ</description></item><item><title>今やってるプロジェクトでのフロントエンドにおけるモデル層のファイル構成の指針</title><link>https://onigra.github.io/blog/2018/06/14/frontend-model-file-design/</link><pubDate>Thu, 14 Jun 2018 23:05:41 +0900</pubDate><guid>https://onigra.github.io/blog/2018/06/14/frontend-model-file-design/</guid><description>経緯 今やってるプロジェクトはNuxtを使ってるんだけど、Nuxtのファイル構成の中でモデルにあたるファイル群をどの辺で管理するか悩んでて、そ</description></item><item><title>Netlifyが仕事で使えるか試す（追記あり）</title><link>https://onigra.github.io/blog/2018/03/28/try-netlify-on-buisiness/</link><pubDate>Wed, 28 Mar 2018 23:47:36 +0900</pubDate><guid>https://onigra.github.io/blog/2018/03/28/try-netlify-on-buisiness/</guid><description>Netlifyがすごく便利なので仕事で使えそうか検証した結果のメモ。 何ができるかはいくらでも記事があるので書かない。 検証した内容 試したいのは</description></item><item><title>Vue.jsでrouter-link(nuxt-link)のテストを書く時にRouterLinkStubが便利</title><link>https://onigra.github.io/blog/2018/03/19/vue-test-utils-router-link-stub/</link><pubDate>Mon, 19 Mar 2018 23:42:57 +0900</pubDate><guid>https://onigra.github.io/blog/2018/03/19/vue-test-utils-router-link-stub/</guid><description>環境 Node.js v9.8.0 Nuxt.js v1.4.0 Jest v22.4.2 vue-test-utils v1.0.0-beta.12 power-assert v1.4.4 本題 例えば、こういう nuxt-link （又は router-link）を使ったコンポーネントで // ~/components/Links.vue &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;nuxt-link to=&amp;#34;/&amp;#34;&amp;gt;Top&amp;lt;/nuxt-link&amp;gt; &amp;lt;nuxt-link to=&amp;#34;/users&amp;#34;&amp;gt;Users&amp;lt;/nuxt-link&amp;gt; &amp;lt;nuxt-link to=&amp;#34;/about&amp;#34;&amp;gt;About&amp;lt;/nuxt-link&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; こんな感じのテス</description></item><item><title>keycloak-nodejs-connectを使ってBearer-only clientの認証を行う際の注意点</title><link>https://onigra.github.io/blog/2018/02/25/keycloak-nodejs-connect-with-bearer-only-client/</link><pubDate>Sun, 25 Feb 2018 11:05:15 +0900</pubDate><guid>https://onigra.github.io/blog/2018/02/25/keycloak-nodejs-connect-with-bearer-only-client/</guid><description>前回の続き Keycloakの Bearer-oncly client を使って認証の検証を行おうと思い、Express.jsとkeycloak-nodejs-connectを使っ</description></item><item><title>Keycloakを使ってWeb APIに対してアクセストークンを使ったリクエストを行う</title><link>https://onigra.github.io/blog/2018/02/25/kc-with-webapi/</link><pubDate>Sun, 25 Feb 2018 03:19:15 +0900</pubDate><guid>https://onigra.github.io/blog/2018/02/25/kc-with-webapi/</guid><description>Web API の認証をKeycloakで行いたい場合の設定と構成の話。 クライアントサイドの JavaScript アプリケーションがリソースをバックエンドの Web API から取得す</description></item><item><title>Vuex(Store)を使ったComponentのテストでActionをDispatchで書いた時のMockの書き方</title><link>https://onigra.github.io/blog/2018/02/12/vuex-test-dispatch-action-mock/</link><pubDate>Mon, 12 Feb 2018 22:15:53 +0900</pubDate><guid>https://onigra.github.io/blog/2018/02/12/vuex-test-dispatch-action-mock/</guid><description>vue-test-utilsのドキュメントにやり方は書いてあるんだけど、Storeのアクションを dispatch で呼んだ時にどう書くかちょっと悩んだのでメ</description></item><item><title>builderscon tokyo 2016に行ってきた</title><link>https://onigra.github.io/blog/2016/12/03/builderscon-tokyo-2016/</link><pubDate>Sat, 03 Dec 2016 21:15:51 +0000</pubDate><guid>https://onigra.github.io/blog/2016/12/03/builderscon-tokyo-2016/</guid><description>聞いた発表 OSS は Windows で動いてこそ楽しい php.iniについて知る 人工知能によってプログラムを有機化する Highly available and scalable Kubernetes on AWS そろそろプログラマーもFPG</description></item><item><title>体重を公開しました</title><link>https://onigra.github.io/blog/2016/05/11/published-my-weight/</link><pubDate>Wed, 11 May 2016 00:19:35 +0000</pubDate><guid>https://onigra.github.io/blog/2016/05/11/published-my-weight/</guid><description>ゴールデンウィーク中に体重記録&amp;amp;公開用のアプリをRails作って公開しました My Weight onigra/my_weight 背景 会社のSlackで #kenkou というチャンネルの主をして</description></item><item><title>「会社に遊びに行く」と具体的に何をして遊んでもらえるのか知りたかったので会社に遊びに行ってきた</title><link>https://onigra.github.io/blog/2016/01/05/kaishaniasobiniikutohanannanoka/</link><pubDate>Tue, 05 Jan 2016 23:25:01 +0000</pubDate><guid>https://onigra.github.io/blog/2016/01/05/kaishaniasobiniikutohanannanoka/</guid><description>最近よく「会社に遊びに行く」というのをよく聞くようになったけど、具体的に何をして遊ぶのかよく考えたらわからなかったので、「会社に遊びに行く」</description></item><item><title>所属会社にRubyKaigi2015のSilver Sponsorになってもらいました #rubykaigi</title><link>https://onigra.github.io/blog/2015/12/10/we-became-a-silver-sponsor-of-rubykaigi2015/</link><pubDate>Thu, 10 Dec 2015 07:41:04 +0000</pubDate><guid>https://onigra.github.io/blog/2015/12/10/we-became-a-silver-sponsor-of-rubykaigi2015/</guid><description>Rubykaigi2015 http://rubykaigi.org/2015/sponsors 正確に言うと、自分が今所属してるtenso株式会社の持株会社のBEENOS株式会社です。 Webエンジニアとして働くようになってから、色々</description></item><item><title>勤務先のオフィスビルのシャトルバスの時刻表APIを作ってHubotで見れるようにした</title><link>https://onigra.github.io/blog/2015/05/05/gotenyama-trust-bus-api/</link><pubDate>Tue, 05 May 2015 14:42:11 +0000</pubDate><guid>https://onigra.github.io/blog/2015/05/05/gotenyama-trust-bus-api/</guid><description>これ作った。 onigra/gotenyama_trust_bus_api 4月から御殿山トラストタワーっていうビルにいて、駅から遠くてシャトルバスが出てるんだけど、カジュアルにバスの時間確認できるよう</description></item><item><title>SIRENの屍人、闇人の生みの親である高橋美貴さんが参加するグループ展stella novaに行ってきた</title><link>https://onigra.github.io/blog/2015/04/26/stella-nova-miki-takahashi/</link><pubDate>Sun, 26 Apr 2015 22:27:30 +0000</pubDate><guid>https://onigra.github.io/blog/2015/04/26/stella-nova-miki-takahashi/</guid><description>みんなのトラウマである恩田美奈(閲覧注意)や太田ともえ(閲覧注意)を生み出したデザイナー、高梨美貴さんが出展するstella novaというグ</description></item><item><title>渋谷.rbでCircleCI、Docker、Serverspec、Ansibleあたりの話をしてきた #shibuyarb</title><link>https://onigra.github.io/blog/2015/03/19/shibuyarb-20150318/</link><pubDate>Thu, 19 Mar 2015 09:57:02 +0000</pubDate><guid>https://onigra.github.io/blog/2015/03/19/shibuyarb-20150318/</guid><description>渋谷.rb[:20150318]の資料です。 本当はAzusaColors使おうとしたんですけど、普通のAzusa使うよりもセンスいるなと思っ</description></item><item><title>コーポレートサイトを自動デプロイするようにした</title><link>https://onigra.github.io/blog/2015/01/13/auto-deploy-settings/</link><pubDate>Tue, 13 Jan 2015 19:37:36 +0000</pubDate><guid>https://onigra.github.io/blog/2015/01/13/auto-deploy-settings/</guid><description>&lt;p>このコーポレートサイトはCIに&lt;a href="http://wercker.com/">wercker&lt;/a>使ってて、この間自動デプロイするようにした。&lt;/p>
&lt;p>&lt;a href="http://www.exvisionz.jp/">http://www.exvisionz.jp/&lt;/a>&lt;/p>
&lt;p>関連記事&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://onigra.github.io/blog/2015/01/03/the-year-end-hackathon/">年末ハッカソンしてコーポレートサイトをAWS + Nginx + Unicorn + Sinatra構成でリニューアルした&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://onigra.github.io/blog/2015/01/07/corporate-site-tuning-with-nginx/">コーポレートサイトのNginxの設定をチューニングも兼ねていじった&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="ざっくり概要">ざっくり概要&lt;/h1>
&lt;ul>
&lt;li>デプロイツールはcapistano3を使用
&lt;ul>
&lt;li>デプロイ先のipは&lt;code>deploy/production.rb&lt;/code>で&lt;a href="https://github.com/aws/aws-sdk-ruby">aws-sdk&lt;/a>を使って取得&lt;/li>
&lt;li>プライベートリポジトリからのソースの取得はSSH Agent Forwadingで行っている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>デプロイ開始時、終了時にslackに通知
&lt;ul>
&lt;li>&lt;a href="https://github.com/onthebeach/capistrano-slackify">capistano-slackify&lt;/a>を使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>masterのテストが通ったらで&lt;code>wercker.yml&lt;/code>に記述したデプロイタスクが動くようにしてある
&lt;ul>
&lt;li>基本的な話は&lt;a href="http://milk1000cc.hatenablog.com/entry/20131130/1385810747">このあたり&lt;/a>が参考になる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>要は、werckerがCI用に立てたUbuntuのインスタンスからcapistranoを叩くようにすればいい&lt;/li>
&lt;/ul></description></item><item><title>コーポレートサイトのNginxの設定をチューニングも兼ねていじった</title><link>https://onigra.github.io/blog/2015/01/07/corporate-site-tuning-with-nginx/</link><pubDate>Wed, 07 Jan 2015 23:52:08 +0000</pubDate><guid>https://onigra.github.io/blog/2015/01/07/corporate-site-tuning-with-nginx/</guid><description>&lt;p>年末にリニューアルしたコーポレートサイトのNginxの設定をチューニングも兼ねていじった。&lt;/p>
&lt;p>&lt;a href="http://onigra.github.io/blog/2015/01/03/the-year-end-hackathon/">年末ハッカソンしてコーポレートサイトをAWS + Nginx + Unicorn + Sinatra構成でリニューアルした&lt;/a>&lt;/p>
&lt;h1 id="構成">構成&lt;/h1>
&lt;ul>
&lt;li>Amazon EC2 t2.small 1台
&lt;ul>
&lt;li>Amazon Linux&lt;/li>
&lt;li>ELB無し&lt;/li>
&lt;li>Public Subnetのみ&lt;/li>
&lt;li>EC2インスタンスにEIP割り当てて、DNSのAレコード設定してるだけ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Nginx 1.7.7&lt;/li>
&lt;li>Ruby 2.2.0
&lt;ul>
&lt;li>Sinatra
&lt;ul>
&lt;li>基本的に分割したhtmlをpartialでマージしてindex.htmlを返してるだけ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Unicorn
&lt;ul>
&lt;li>worker 4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="最終的なnginxconfとビルド時のコマンド">最終的なnginx.confとビルド時のコマンド&lt;/h3>
&lt;p>&lt;a href="https://gist.github.com/onigra/ff92467d1107a5b868e1">https://gist.github.com/onigra/ff92467d1107a5b868e1&lt;/a>&lt;/p>
&lt;h1 id="やったこと">やったこと&lt;/h1>
&lt;p>httpサーバの設定を本格的にいじったのが初めてなので、インフラ専門の人から見て特に目新しいことはしてないと思う。&lt;/p>
&lt;ul>
&lt;li>チューニング
&lt;ul>
&lt;li>worker_processesをautoにする&lt;/li>
&lt;li>worker_rlimit_nofileとworker_connectionsの数値をいじる&lt;/li>
&lt;li>use epoll&lt;/li>
&lt;li>静的コンテンツをgzipで返す設定&lt;/li>
&lt;li>proxy cacheを使う&lt;/li>
&lt;li>静的コンテンツはNginxに返させる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>セキュリティ
&lt;ul>
&lt;li>server_tokens off&lt;/li>
&lt;li>DDos対策&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>趣味
&lt;ul>
&lt;li>GeoIPの情報をログに出す&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>例えば、アプリケーションでWebAPIのバージョニングをしない</title><link>https://onigra.github.io/blog/2015/01/05/webapi-versioning/</link><pubDate>Mon, 05 Jan 2015 14:36:33 +0000</pubDate><guid>https://onigra.github.io/blog/2015/01/05/webapi-versioning/</guid><description>&lt;h1 id="注意">注意&lt;/h1>
&lt;ul>
&lt;li>AWSの前提で話をしています&lt;/li>
&lt;li>実際にこの構成を試したわけではありません&lt;/li>
&lt;li>識者のご意見お待ちしております&lt;/li>
&lt;/ul>
&lt;p>年末にWebAPIのバージョニングについて考えてて、2014年にその話題で盛り上がった時の記事読みあさったり、&lt;a href="http://www.oreilly.co.jp/books/9784873116860/">Web API: The Good parts&lt;/a>読んだりしたんだけど、&lt;a href="http://kenn.hatenablog.com/entry/2014/03/06/105249">発端になった@kennさんの記事&lt;/a>のブコメで&lt;a href="http://b.hatena.ne.jp/entry/185302394/comment/ikeike443">mod_rewriteでやるべき&lt;/a>っていうのを見てなるほど、と思ったのと同時にそもそもバージョニングをアプリケーションにやらせない方が幸せになれるんじゃないかと思って、思いついたのが下記の方法。&lt;/p></description></item><item><title>「つくって学ぶプログラミング言語 RubyによるScheme処理系の実装」を読んだ</title><link>https://onigra.github.io/blog/2015/01/02/read-scheme-in-ruby/</link><pubDate>Fri, 02 Jan 2015 20:59:50 +0000</pubDate><guid>https://onigra.github.io/blog/2015/01/02/read-scheme-in-ruby/</guid><description>つくって学ぶプログラミング言語 RubyによるScheme処理系の実装 今年はもう少しプログラミングについて深く理解したいと思ったので、手始めに</description></item><item><title>年末ハッカソンしてコーポレートサイトをAWS + Nginx + Unicorn + Sinatra構成でリニューアルした</title><link>https://onigra.github.io/blog/2014/12/30/the-year-end-hackathon/</link><pubDate>Tue, 30 Dec 2014 12:02:55 +0000</pubDate><guid>https://onigra.github.io/blog/2014/12/30/the-year-end-hackathon/</guid><description>&lt;p>弊社コーポレートサイトのデザインが非常に味わい深く、以前から作り直そうという話題が出てたものの、なかなか実施されなかったので、年末全社員（5名）集まってハッカソン形式で1日で作り直すことにした。&lt;/p>
&lt;p>自分が言い出しっぺなのでオーガナイザーをやった。&lt;/p>
&lt;h2 id="before">Before&lt;/h2>
&lt;p>&lt;img src="https://onigra.github.io/images/old_design.png" alt="old_design">&lt;/p></description></item><item><title>今年よく聞いた音楽2014</title><link>https://onigra.github.io/blog/2014/12/25/the-best-of-music-2014/</link><pubDate>Thu, 25 Dec 2014 09:35:39 +0000</pubDate><guid>https://onigra.github.io/blog/2014/12/25/the-best-of-music-2014/</guid><description>&lt;h1 id="meine-meinungマイネマイヌクhttpmainemainukutumblrcom">&lt;a href="http://mainemainuku.tumblr.com/">Meine Meinung(マイネマイヌク)&lt;/a>&lt;/h1>
&lt;p>一昨年ストリートライブで見てファンになって、今年もよく聞いた。特にゲームミュージック好きの人には聞いてほしい。&lt;/p>
&lt;ul>
&lt;li>「クロノトリガー」から「時の回廊」&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>「ICO」から「You Were There」&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted --></description></item><item><title>Ansible Extraとalternativesモジュールの話 | Ansible Advent Calendar2014</title><link>https://onigra.github.io/blog/2014/12/11/ansible-extra-and-alternatives-module/</link><pubDate>Thu, 11 Dec 2014 19:17:43 +0000</pubDate><guid>https://onigra.github.io/blog/2014/12/11/ansible-extra-and-alternatives-module/</guid><description>&lt;p>この記事は&lt;a href="http://qiita.com/advent-calendar/2014/ansible">Ansible Advent Calendar 2014&lt;/a> 16日目の記事です。
前日は、&lt;a href="https://twitter.com/pioho07">piohoさん&lt;/a>の&lt;a href="http://qiita.com/pioho07/items/683323611d4669ca368c">Ansible Galaxy にロールを登録してバージョン管理してみる(Aerospike構築Roleで)&lt;/a>でした。&lt;/p>
&lt;p>本エントリーでは、先日Ansible Extraの&lt;code>alternatives&lt;/code>モジュールを使おうとして、最終的にやめた話について書きます。&lt;/p>
&lt;h1 id="ansible-extraとは">Ansible Extraとは？&lt;/h1>
&lt;blockquote>
&lt;p>This repo contains a subset of ansible-modules with slightly lower use or priority than &amp;ldquo;core&amp;rdquo; modules.&lt;/p>
&lt;p>All new modules should be submitted here, and have a chance to be promoted to core over time.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://github.com/ansible/ansible-modules-extras">ansible/ansible-modules-extras&lt;/a>リポジトリのREADMEより引用&lt;/p>
&lt;blockquote>
&lt;p>v1.8でCoreとExtraに分割されました。
Coreが優先的にメンテナンスされます。
新しいモジュールはExtraにまず登録され、使用頻度・必要性などによりCoreに昇格されます。&lt;/p>
&lt;/blockquote>
&lt;p>AdventCalendar1日目、&lt;a href="https://twitter.com/volanja">volanjaさん&lt;/a>の&lt;a href="http://qiita.com/volanja/items/2ffa1599fc9a1fae39a1">今年1年間でAnsible界隈ではどのような変化が起こったのか。&lt;/a>より引用。&lt;/p></description></item><item><title>あかね | うちの猫 Advent Calendar 2014</title><link>https://onigra.github.io/blog/2014/12/03/uchino-neko-2014/</link><pubDate>Wed, 03 Dec 2014 19:25:21 +0000</pubDate><guid>https://onigra.github.io/blog/2014/12/03/uchino-neko-2014/</guid><description>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="http://www.adventar.org/calendars/363">うちの猫 Advent Calendar 2014&lt;/a>、10日目はうちの『あかね』を紹介させていただきます。&lt;/p></description></item><item><title>YAPC::Asia 2014 ボランティアスタッフとLTを終えて #yapcasia</title><link>https://onigra.github.io/blog/2014/08/30/yapc-asia-2014-is-over/</link><pubDate>Sat, 30 Aug 2014 23:09:51 +0000</pubDate><guid>https://onigra.github.io/blog/2014/08/30/yapc-asia-2014-is-over/</guid><description>&lt;p>YAPC::Asia 2014、特別大きなトラブルは無く無事に終えることができました。&lt;br>
大勢の方に楽しんでいただけたようで何よりです。
長くなったので、4部に分けます。&lt;/p></description></item><item><title>議論を収束する気が無いのに議論を宙に浮かせる行為</title><link>https://onigra.github.io/blog/2014/08/25/giron-chuduri/</link><pubDate>Mon, 25 Aug 2014 12:26:32 +0000</pubDate><guid>https://onigra.github.io/blog/2014/08/25/giron-chuduri/</guid><description>&lt;h5 id="一部時系列を改変しています">※一部時系列を改変しています&lt;/h5>
&lt;!-- raw HTML omitted --></description></item><item><title>Array#slice_by_indexesというgemを作った</title><link>https://onigra.github.io/blog/2014/08/01/slice-by-indexes/</link><pubDate>Fri, 01 Aug 2014 21:48:55 +0000</pubDate><guid>https://onigra.github.io/blog/2014/08/01/slice-by-indexes/</guid><description>&lt;h3 id="201485-修正-名前変えた">2014/8/5 修正 名前変えた&lt;/h3>
&lt;p>Array#slice_indexes -&amp;gt; Array#slice_by_indexes&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>名前全然思いつかなくて仮で付けてた名前そのまま採用した。コードもきれいとはいえないと思う。やりたいことができたので一旦公開した。&lt;/p>
&lt;p>&lt;a href="https://github.com/onigra/slice_by_indexes">onigra/slice_by_indexes&lt;/a>&lt;/p></description></item><item><title>猫がMacBookのキーボードの上で寝ようとするので困る</title><link>https://onigra.github.io/blog/2014/07/19/neko-jama/</link><pubDate>Sat, 19 Jul 2014 21:50:52 +0000</pubDate><guid>https://onigra.github.io/blog/2014/07/19/neko-jama/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>当たり前のように寝ようとするので本当に困る。動画見てる時とか、ゲームしてる時とか、楽器練習してる時とかに寝られると邪魔でしょうがない。twitterで空リプしちゃう時とかあるし。&lt;/p></description></item><item><title>YAPC::Asia TOKYO 2014のスタッフやります #yapcasia</title><link>https://onigra.github.io/blog/2014/07/04/yapc-asia-2014-staff/</link><pubDate>Fri, 04 Jul 2014 20:10:41 +0000</pubDate><guid>https://onigra.github.io/blog/2014/07/04/yapc-asia-2014-staff/</guid><description>面白そうな発表が盛りだくさんなのでみなさん来てください。 トーク(予定)一覧 チケット購入はこちらから。 一般チケット 個人スポンサーチケット</description></item><item><title>ノンデザイナーのデザイン練習 フライヤー編</title><link>https://onigra.github.io/blog/2014/07/03/non-designers-design-practice/</link><pubDate>Thu, 03 Jul 2014 10:58:15 +0000</pubDate><guid>https://onigra.github.io/blog/2014/07/03/non-designers-design-practice/</guid><description>&lt;p>&lt;img src="https://onigra.github.io/images/flyer7.jpg" alt="完成版">&lt;/p>
&lt;p>ベーシストとして参加してる、&lt;a href="https://twitter.com/sayoko_vn">バイオリニスト小夜子さん&lt;/a>率いるBandaCapriccioのフライヤーを作った。
バイオリン、ピアノ、ギター、ベースでジャズ、ゲーム曲、ジブリ曲、歌もの等を演奏するバンドです。&lt;/p>
&lt;p>7/25に岩本町&lt;a href="http://www.egg-mte.com/index.html">EggmanTokyoEast&lt;/a>で。また、毎月第二日曜に本厚木&lt;a href="http://www.macarthurgarage.com/">MacArthurGarrage&lt;/a>にてライブやってます。よかったら聞きにきてください。&lt;/p>
&lt;p>&lt;a href="https://github.com/onigra/repertory/blob/master/banda_capriccio.md">こんな曲をやってます&lt;/a>&lt;/p></description></item><item><title>rubyの排他制御ライブラリ(redis-semaphoreの紹介)</title><link>https://onigra.github.io/blog/2014/06/30/introduction-to-redis-semaphore/</link><pubDate>Mon, 30 Jun 2014 19:59:20 +0000</pubDate><guid>https://onigra.github.io/blog/2014/06/30/introduction-to-redis-semaphore/</guid><description>&lt;p>最近仕事でよく知らなかった排他制御について調べたり勉強する機会があって、セマフォを実現するのによさげなライブラリがあったので書く。&lt;/p>
&lt;p>&lt;a href="https://github.com/dv/redis-semaphore">dv/redis-semaphore&lt;/a>&lt;/p>
&lt;p>この辺分かってる人だったらライブラリ名でどんなものだか想像できると思うけど、カウンティングセマフォの資源の操作をredisで行うライブラリである。&lt;/p></description></item><item><title>Ginza.rbのRails Action Mailer Previewのコードリーディングに行ってきた #ginzarb</title><link>https://onigra.github.io/blog/2014/06/18/ginzarb-action-mailer-preview-code-reading/</link><pubDate>Wed, 18 Jun 2014 10:46:26 +0000</pubDate><guid>https://onigra.github.io/blog/2014/06/18/ginzarb-action-mailer-preview-code-reading/</guid><description>&lt;p>&lt;a href="http://ginzarb.doorkeeper.jp/events/12380?utm_campaign=event_12380_8395&amp;amp;utm_medium=email&amp;amp;utm_source=registered_message">これ&lt;/a>に行ってきた。&lt;br>
会場を提供してくださった リクルートライフスタイル様、ありがとうございました。&lt;/p>
&lt;h2 id="概要">概要&lt;/h2>
&lt;h3 id="機能使い方">機能、使い方&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://y-yagi.tumblr.com/post/88746017105/rails-action-mailer-previews">RailsのAction Mailer Previewsについて&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ginzarb/mailer_previews_sample">サンプルアプリ&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>gitとgithubについて初心者に教える時にやってるやり方</title><link>https://onigra.github.io/blog/2014/06/02/git-and-github-workshop/</link><pubDate>Mon, 02 Jun 2014 20:03:28 +0000</pubDate><guid>https://onigra.github.io/blog/2014/06/02/git-and-github-workshop/</guid><description>&lt;p>2度ほどgit&amp;amp;github初心者(gitは多少使えて、githubは使えない、あるいはほとんど使っていないエンジニア及びデザイナー)に対して使い方を教えるのをワークショップ形式でやったことがあるんですが、&lt;br>
今後の教えることになった時に備えて備忘兼ねて書いておきます。他にこんなやりかたしてるというのがあったら教えてほしいです。&lt;/p>
&lt;p>簡単に言うと1つのhtmlファイルのみ置いてあるリポジトリをgithubに用意し、それをみんなでプルリクエストで編集するということをしてます。&lt;/p></description></item><item><title>2万円以内のオフィスチェア選び</title><link>https://onigra.github.io/blog/2014/04/23/office-chair/</link><pubDate>Wed, 23 Apr 2014 10:46:37 +0000</pubDate><guid>https://onigra.github.io/blog/2014/04/23/office-chair/</guid><description>&lt;p>{% img /images/chairs.jpg %}&lt;/p>
&lt;p>オフィスを引っ越したついでに、椅子を買い替えることになった。&lt;br>
本当は&lt;a href="http://hiroki.jp/2012/08/16/5141/">この記事&lt;/a>を見てエンボディチェアやらミラチェアやらリープチェアやら欲しいんだけど、&lt;br>
そんなにリッチじゃないので、現実的に1人2万円以内の予算で社員それぞれ好きな椅子を選ぶことになった。&lt;/p></description></item><item><title>open-wripeが動かなかったのでプルリクしてマージされた</title><link>https://onigra.github.io/blog/2014/04/15/contributed-to-open-wripe/</link><pubDate>Tue, 15 Apr 2014 10:54:47 +0000</pubDate><guid>https://onigra.github.io/blog/2014/04/15/contributed-to-open-wripe/</guid><description>&lt;p>&lt;a href="https://twitter.com/masuidrive">@masuidrive&lt;/a>さんのメモアプリ、&lt;a href="https://wri.pe/">wri.pe&lt;/a>がオープンソースになったので触ってみた。&lt;/p>
&lt;p>&lt;a href="https://github.com/masuidrive/open-wripe">masuidrive/open-wripe&lt;/a>&lt;/p>
&lt;p>cloneしてsolr入れてREADMEの手順でコマンド叩いたらsolrの起動でこける。&lt;/p></description></item><item><title>コードを公開することと「だまって嗤われる勇気」</title><link>https://onigra.github.io/blog/2014/04/11/review-ees-mental/</link><pubDate>Fri, 11 Apr 2014 10:11:32 +0000</pubDate><guid>https://onigra.github.io/blog/2014/04/11/review-ees-mental/</guid><description>&lt;p>アプレッソの小野さんのコードレビューについての記事を読みました。私もレビュアーになる際は気をつけます。&lt;/p>
&lt;ul>
&lt;li>コードレビューについて&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="http://blog.livedoor.jp/lalha/archives/50495777.html">http://blog.livedoor.jp/lalha/archives/50495777.html&lt;/a>&lt;/p>
&lt;ul>
&lt;li>HRTの原則 ～ソフトウェア開発はバーでしっとり語り合うように ～&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="http://blog.livedoor.jp/lalha/archives/50496623.html">http://blog.livedoor.jp/lalha/archives/50496623.html&lt;/a>&lt;/p></description></item><item><title>文字列をギャル文字に置換するgem、String#to_galを作って（はじめて）rubygems.orgに公開した</title><link>https://onigra.github.io/blog/2014/03/30/string-to-gal/</link><pubDate>Sun, 30 Mar 2014 01:47:54 +0000</pubDate><guid>https://onigra.github.io/blog/2014/03/30/string-to-gal/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>ギャルで&lt;a href="http://ameblo.jp/upgrade-ayp">自作PCアイドル&lt;/a>で&lt;a href="http://ayapi.github.io/">jsプログラマ&lt;/a>の&lt;a href="https://twitter.com/upgrade_ayp">ぁゃぴ&lt;/a>さんのブログを社内のチャットでシェアしたらみんなギャル文字で会話しはじめた。&lt;/p></description></item><item><title>zon sonus 6弦フレットレスモデルを買った</title><link>https://onigra.github.io/blog/2014/02/16/bought-zon-sonus-6strings-fretless/</link><pubDate>Sun, 16 Feb 2014 16:18:41 +0000</pubDate><guid>https://onigra.github.io/blog/2014/02/16/bought-zon-sonus-6strings-fretless/</guid><description>&lt;p>突然だが、趣味でベースを弾いている。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>現在、メインでIbanezの6弦を使っているのだが、最近はジャズを弾く事が多くなったことと、上の動画のように&lt;a href="https://twitter.com/sayoko_vn">バイオリニスト&lt;/a>のバックで弾く機会が多くなってきて、今使用しているベースとは異なる表現力が欲しいと思いはじめていた。&lt;/p>
&lt;p>決定的になったのは、この動画である。&lt;br>
7:03からの美しいベースソロに感動し、この歌うようなベースソロを自分も弾きたいと思い、購入を決心した。&lt;/p></description></item><item><title>td-client-rubyを使ってみたのでサンプルスクリプト晒す</title><link>https://onigra.github.io/blog/2014/01/07/td-client-sample/</link><pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2014/01/07/td-client-sample/</guid><description>&lt;p>最近仕事でTreasureDataを扱うことが多く、td-client-rubyを使って色々やってみてる。&lt;br>
簡単に使い回せそうなスクリプト書いてみたけどもうちょっと汎用性持たせたい。&lt;/p></description></item><item><title>SQL入門用の環境としてJackDB（webサービス）が便利</title><link>https://onigra.github.io/blog/2013/12/28/cloud-jackdb/</link><pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/12/28/cloud-jackdb/</guid><description>&lt;p>職場で非エンジニアからSQLをやってみたいと言われたので、JackDBというサービスを使って教えてみることにしました。&lt;/p>
&lt;p>&lt;a href="http://www.jackdb.com/">http://www.jackdb.com/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/tristanwietsma/jack">goで書かれたデータストア&lt;/a>とは異なります&lt;/p>
&lt;p>このサービス自体はwebブラウザで操作するDBクライアントなんですが、無料サンプルでPostgreSQLが扱えます。&lt;br>
DBに限った話じゃないですが、DBは環境やサンプルデータを用意するのがダルいので、前に少し触った事を思い出して使ってみました。&lt;/p></description></item><item><title>俺のMySQL秘伝スクリプトが火を噴くぜ #mysqlcasual</title><link>https://onigra.github.io/blog/2013/12/08/mysql-hiden-source/</link><pubDate>Sun, 08 Dec 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/12/08/mysql-hiden-source/</guid><description>&lt;p>このエントリーは&lt;a href="http://www.zusaar.com/event/1847003">MySQL Casual Advent Calendar 2013&lt;/a> 8日目の記事です。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>MySQL Casual Talks vol.5でLTしてきました #mysqlcasual</title><link>https://onigra.github.io/blog/2013/10/25/lightning-talked-at-mysql-casual-talks-5/</link><pubDate>Fri, 25 Oct 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/10/25/lightning-talked-at-mysql-casual-talks-5/</guid><description>&lt;p>&lt;a href="http://www.zusaar.com/event/1086003">MySQL Casual Talks vol.5&lt;/a>でLTしてきました。&lt;br>
主催の&lt;a href="https://twitter.com/myfinder">@myfinder&lt;/a>さん、会場を提供してくださったOracleさま、ありがとうございました。&lt;/p></description></item><item><title>社内勉強会用にshellでのUnitTestについて資料つくったらぼちぼち見てもらえた</title><link>https://onigra.github.io/blog/2013/09/20/shell-script-testing/</link><pubDate>Fri, 20 Sep 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/09/20/shell-script-testing/</guid><description>&lt;p>タイトルの通りなんですが、その社内勉強会を&lt;a href="http://peatix.com/event/17621">大人のYAPC&lt;/a>に出たいのでサボるため、予め作っておいてスライドをUPしておいたら、ぼちぼちはてブついててちょっとびっくりしました。ぶっちゃけ社内だと見られてるかどうか怪しいので嬉しかったですね。&lt;/p>
&lt;p>まずは、Tweetを引用させていただいた&lt;a href="https://twitter.com/sue445">@sue445&lt;/a>さんと&lt;a href="http://a4p.me/archives/1157">標準出力に色を付けるエントリー&lt;/a>を書いてくださった&lt;a href="https://twitter.com/shitai246_">@shitai246_&lt;/a>さんにお礼申し上げます。&lt;/p></description></item><item><title>JenkinsのPublish Over SSH Plugin関連でバージョン下げた話</title><link>https://onigra.github.io/blog/2013/09/09/jenkins-downgrade-with-publish-over-ssh-plugin/</link><pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/09/09/jenkins-downgrade-with-publish-over-ssh-plugin/</guid><description>&lt;p>前回Jenkinsのバージョン上げたんですが、ジョブの設定見たら「ロード中…」が消えず、ジョブのメンテができなくなってしまいました…&lt;/p>
&lt;p>&lt;img src="https://onigra.github.io/images/jenkins_loading.jpg" alt="ロード中">&lt;/p>
&lt;p>調べてみると、&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Publish+Over+SSH+Plugin">Publish Over SSH Plugin&lt;/a>でエラーが発生しているっぽいです。&lt;br>
（正確には、プラグインの中で使ってる&lt;a href="https://github.com/jenkinsci/publish-over-plugin">publish-over-plugin&lt;/a>の問題？）&lt;/p></description></item><item><title>JenkinsのアップデートしたらCloudbees Free Enterprise Plugins関連で焦った話</title><link>https://onigra.github.io/blog/2013/09/05/jenkins-upgrade-with-cloudbees-free-enterprise-plugin/</link><pubDate>Thu, 05 Sep 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/09/05/jenkins-upgrade-with-cloudbees-free-enterprise-plugin/</guid><description>&lt;p>日本語の記事がほとんど見当たらなかったので書きます。&lt;/p>
&lt;p>Jenkinsのプラグインで&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/CloudBees+Free+Enterprise+Plugins">CloudBees Free Enterprise Plugins&lt;/a>というのがあり、会社でがっつり使われてるのですが、バージョンが上がった際に&lt;a href="http://www.cloudbees.com/">cloudbees&lt;/a>のアカウント登録が必要になったようです。サインアップしてこのプラグインを使う事は無料なのですが、けっこう焦りました。&lt;/p></description></item><item><title>小物エンジニアの会にてMariaDBの話をしてきました #MariaDB #小物エンジニアの会</title><link>https://onigra.github.io/blog/2013/06/29/komono-engineer-no-kai/</link><pubDate>Sat, 29 Jun 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/06/29/komono-engineer-no-kai/</guid><description>&lt;p>&lt;a href="http://atnd.org/events/40593">小物エンジニアの会&lt;/a>という会があったので、最近よくさわっているMariaDBについて話をしてきました。割とウケて嬉しかったです。&lt;/p>
&lt;!-- raw HTML omitted --></description></item><item><title>MacのMySQLがなんかおかしかったので環境整理するついでに5.6にした</title><link>https://onigra.github.io/blog/2013/05/13/mysql-cleanup-and-upgrade/</link><pubDate>Mon, 13 May 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/05/13/mysql-cleanup-and-upgrade/</guid><description>&lt;p>MySQLのログを&lt;a href="https://github.com/treasure-data/td-agent">td-agent&lt;/a>で集めて&lt;a href="http://basho.com/riak/">riak&lt;/a>に突っ込んで遊ぼうかなーと思って私物のMacに環境構築してたら、
どうもMySQLの構成ファイルの位置がおかしい。&lt;br>
調べてみると、Mac買ってよくわかってない頃にMySQLをOSX用のインストーラーでインスコしてて、その後Homebrewでもインスコしてたのでなんかおかしくなってたらしい。備忘を兼ねて手順を晒します。&lt;/p>
&lt;p>とりあえずインストーラー版もHomebrew版も両方アンインストールして、&lt;a href="http://dic.nicovideo.jp/a/%E3%81%9B%E3%81%A3%E3%81%8B%E3%81%8F%E3%81%A0%E3%81%8B%E3%82%89">せっかくだから&lt;/a>バージョン5.6を選んでみます。&lt;/p></description></item><item><title>個人TDDBCを開いてもらった その2</title><link>https://onigra.github.io/blog/2013/05/02/kojin-tddbc-2/</link><pubDate>Thu, 02 May 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/05/02/kojin-tddbc-2/</guid><description>&lt;p>&lt;a href="http://onigra.github.io/blog/2013/05/01/kojin-tddbc/">前回&lt;/a>の続きです。&lt;/p>
&lt;h2 id="tddはテンポが重要">TDDはテンポが重要&lt;/h2>
&lt;p>sunaotさん曰くTDDはテンポが重要で、これらの一連の流れがサクサクいくようになってくるとコーディングが楽しいとのこと。なので、bundle execでテンポが悪くなるのが好きじゃないらしいです。&lt;/p>
&lt;h2 id="sunaotさんによるtddお手本">sunaotさんによるTDDお手本&lt;/h2>
&lt;p>うまくノリを伝えられるか自信が無いですが、僕の中で非常に分かりやすかったので書き出してみます。渡した数を2倍にして返すという単純なメソッドを例にして説明してくださいました。&lt;/p></description></item><item><title>個人TDDBCを開いてもらった その1</title><link>https://onigra.github.io/blog/2013/05/01/kojin-tddbc/</link><pubDate>Wed, 01 May 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/05/01/kojin-tddbc/</guid><description>&lt;p>以前に&lt;a href="https://twitter.com/t_wada">t_wadaさん&lt;/a>の&lt;a href="http://d.hatena.ne.jp/t-wada/20100228">RSpec入門記事&lt;/a>を写経し、なんとなくユニットテストの書き方とTDDのプロセスは理解したものの、より深くテストについて理解したかったため&lt;a href="https://twitter.com/sunaot">sunaotさん&lt;/a>に個人TDDBCをやってもらいました。&lt;/p>
&lt;p>ネタはこんな感じです。&lt;/p>
&lt;ul>
&lt;li>自分が作ってるrailsアプリを元にテストコードを書いてみつつリファクタリング&lt;/li>
&lt;li>sunaotさんによるTDDお手本&lt;/li>
&lt;/ul></description></item><item><title>【何番煎じ】OctopressとGitHub Pagesを使用したブログの構築手順</title><link>https://onigra.github.io/blog/2013/04/28/introduction-of-octopress/</link><pubDate>Sun, 28 Apr 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/04/28/introduction-of-octopress/</guid><description>&lt;p>&lt;a href="http://ut-gym.jp/">UT Startup Gym&lt;/a>の第3期成果発表会も終わった事ですし、&lt;br>
前からやろうと思ってた技術ブログを立ち上げました。&lt;/p>
&lt;p>日本のエンジニアのブログといえば&lt;a href="http://hatenablog.com/">はてなブログ&lt;/a>が多い印象ですが、&lt;br>
最近は&lt;a href="http://octopress.org/">Octopress&lt;/a>と&lt;a href="http://pages.github.com/">GitHub Pages&lt;/a>を使った運用がナウいらしいので&lt;br>
流行に乗っかってみます。&lt;/p></description></item><item><title>first post</title><link>https://onigra.github.io/blog/2013/04/28/first-post/</link><pubDate>Sun, 28 Apr 2013 00:00:00 +0000</pubDate><guid>https://onigra.github.io/blog/2013/04/28/first-post/</guid><description>&lt;p>this is it&lt;/p></description></item></channel></rss>